name: Build on DockerHub and Deploy to AWS
on:
  push:
    branches:
      - main
env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  AWS_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
  VM_IP: ${{ secrets.VM_IP }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: |
            ~/.docker
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./
          push: true
          dockerfile: ./Dockerfile
          tags: ramyshurafa/strapi:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      - name: Set permissions for private key
        run: |
          echo "${{ env.AWS_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem

      # OLD DEPLOYMENT STEPS
      # - name: Pull Docker image
      #   run: |
      #     ssh -o StrictHostKeyChecking=no -i key.pem ${{ env.VM_IP }} 'docker pull ramyshurafa/strapi:latest'
      # - name: Stop running container
      #   run: |
      #     ssh -o StrictHostKeyChecking=no -i key.pem ${{ env.VM_IP }} 'docker stop strapi || true'
      #     ssh -o StrictHostKeyChecking=no -i key.pem ${{ env.VM_IP }} 'docker rm strapi || true'
      # - name: Run new container
      #   run: |
      #     ssh -o StrictHostKeyChecking=no -i key.pem ${{ env.VM_IP }} 'docker run -d --name strapi -p 80:1337 ramyshurafa/strapi:latest'

      # New deployment steps, using docker-compose file
      - name: Copy docker-compose file
        run: |
          scp -o StrictHostKeyChecking=no -i key.pem docker-compose.yml ${{ env.VM_IP }}:~/docker-compose.yml
      - name: Run docker-compose
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ env.VM_IP }} 'docker-compose up -d'
